{"version":3,"sources":["components/RangeInputPlayer/index.module.css","components/App/index.module.css","components/Choropleth/popup.module.css","components/Choropleth/index.module.css","serviceWorker.js","utils/getData.js","components/RangeInputPlayer/index.js","components/Header/index.js","components/Stats/index.js","components/Choropleth/Popup.js","utils/noop.js","components/Choropleth/index.js","components/App/index.js","index.js","components/Stats/index.module.css","components/Header/index.module.css"],"names":["module","exports","colors","red","container","rangeInput","playButton","black","grey","App","mapContainer","title","chloropleth","Boolean","window","location","hostname","match","years","statProperties","concat","dataCenter","data","crashData","dataStats","properties","Object","toConsumableArray","stats","geoJsonStats","reduce","accum","property","idx","objectSpread","defineProperty","minYear","parseInt","maxYear","length","getStats","RangeInputPlayer","state","play","intervalId","intervalTime","componentDidUpdate","prevProps","prevState","_this","startTimeline","stopTimeline","componentWillUnmount","incrementValue","_this$props","props","value","onValueChange","min","max","step","setInterval","clearInterval","e","target","onPlayPause","preventDefault","setState","_this$props2","this","react_default","a","createElement","className","styles","onChange","type","onClick","md","PureComponent","defaultProps","Header","_ref","year","onYearChange","children","header","headerLeft","components_RangeInputPlayer","icons","memo","rowHeadings","spaceAbove","columns","map","key","column","median","mean","toFixed","sum","Popup","formatD3Data","name","position","feature","onClose","count","es_Popup","BarChart","width","height","Bar","dataKey","fill","LabelList","XAxis","Choropleth","popupPos","popupFeature","initialZoom","maxFillOpacity","fillScale","scaleLinear","domain","range","getFillOpacity","styleFeature","color","weight","fillColor","fillOpacity","setPopup","event","latlng","onEachFeature","layer","on","assertThisInitialized","_this$state","Map","center","zoom","TileLayer","attribution","url","GeoJSON","style","Popup_Popup","Leaflet","Icon","Default","imagePath","showStats","components_Header","components_Stats","Choropleth_Choropleth","Component","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","blue"],"mappings":"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","file":"static/js/main.2fee51ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"\\\"resources/css/colors.module.css\\\"\",\"red\":\"#CC6161\",\"container\":\"RangeInputPlayer_container__3dGgm\",\"rangeInput\":\"RangeInputPlayer_rangeInput__Q8ZhX\",\"playButton\":\"RangeInputPlayer_playButton__2VwNp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"\\\"resources/css/colors.module.css\\\"\",\"black\":\"#131416\",\"grey\":\"#999491\",\"App\":\"App_App__2gtqe\",\"mapContainer\":\"App_mapContainer__3bbHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"popup_title__2iY64\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chloropleth\":\"Choropleth_chloropleth__36r9k\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import geoJsonStats from 'geojson-stats'\nimport crashData from 'resources/data.json'\n\nexport const years = ['2010', '2011', '2012', '2013', '2014']\nconst statProperties = ['total', ...years]\n\nconst getStats = () => {\n  const properties = ['length', 'area', ...statProperties]\n  const stats = geoJsonStats(crashData, statProperties)\n\n  return properties.reduce((accum, property, idx) => ({\n    ...accum,\n    [property]: {\n      ...stats[idx]\n    }\n  }), {\n    minYear: parseInt(years[0], 10),\n    maxYear: parseInt(years[years.length - 1], 10)\n  })\n}\n\nexport const dataCenter = [38.90364199734993, -77.02342987060545]\n\nexport const data = crashData\nexport const dataStats = getStats();\n","import React, { PureComponent } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { MdPlayCircleOutline, MdPauseCircleOutline } from \"react-icons/md\"\nimport styles from \"./index.module.css\"\n\nclass RangeInputPlayer extends PureComponent {\n  static propTypes = {\n    value: PropTypes.number.isRequired,\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    onValueChange: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    step: PropTypes.number\n  }\n\n  static defaultProps = {\n    title: \"\",\n    step: 1\n  }\n\n  state = {\n    play: false\n  }\n\n  intervalId = null\n  intervalTime = 1500\n\n  componentDidUpdate = (prevProps, prevState) => {\n    const { play } = this.state\n\n    if (play !== prevState.play) {\n      play ? this.startTimeline() : this.stopTimeline()\n    }\n  }\n\n  componentWillUnmount = () => {\n    this.stopTimeline()\n  }\n\n  incrementValue = () => {\n    const { value, onValueChange, min, max, step } = this.props\n    onValueChange(value === max ? min : value + step)\n  }\n\n  startTimeline = () => {\n    this.intervalId = setInterval(this.incrementValue, this.intervalTime)\n  }\n\n  stopTimeline = () => {\n    clearInterval(this.intervalId)\n  }\n\n  onValueChange = e => {\n    const { onValueChange } = this.props\n    onValueChange(parseInt(e.target.value, 10))\n  }\n\n  onPlayPause = e => {\n    e.preventDefault()\n\n    this.setState(prevState => ({\n      play: !prevState.play\n    }))\n  }\n\n  render() {\n    const { title, value, min, max, step } = this.props\n    const { play } = this.state\n\n    return (\n      <div className={styles.container}>\n        {title}\n        \n        <input\n          className={styles.rangeInput}\n          onChange={this.onValueChange}\n          value={value}\n          type=\"range\"\n          min={min}\n          max={max}\n          step={step}\n        />\n\n        <button className={styles.playButton} onClick={this.onPlayPause}>\n          {play ? <MdPauseCircleOutline /> : <MdPlayCircleOutline />}\n        </button>\n\n        {value}\n      </div>\n    )\n  }\n}\n\nexport default RangeInputPlayer\n","import React, { memo } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { dataStats } from \"utils/getData\"\n\nimport RangeInputPlayer from \"components/RangeInputPlayer\"\nimport styles from \"./index.module.css\"\n\nconst Header = ({ year, onYearChange, children }) => (\n  <div className={styles.header}>\n    <div className={styles.headerLeft}>\n      <div className={styles.title}>D.C. Neighborhood Car Crashes</div>\n      <RangeInputPlayer\n        value={year}\n        title=\"Year\"\n        onValueChange={onYearChange}\n        min={dataStats.minYear}\n        max={dataStats.maxYear}\n      />\n    </div>\n\n    <div className={styles.icons}>\n      {children}\n    </div>        \n  </div>\n)\n\nHeader.propTypes = {\n  year: PropTypes.number.isRequired,\n  onYearChange: PropTypes.func.isRequired,\n  children: PropTypes.any\n}\n\nHeader.defaultProps = {\n  children: null\n}\n\nexport default memo(Header)\n","import React, { memo } from \"react\"\n\nimport { years, dataStats } from \"utils/getData\"\nimport styles from \"./index.module.css\"\n\nconst Stats = () => (\n  <div className={styles.container}>\n    <div className={styles.rowHeadings}>\n      <div>&nbsp;</div>\n      <div>Min</div>\n      <div>Max</div>\n      <div>Median</div>\n      <div>Mean</div>\n      <div className={styles.spaceAbove}>Total</div>\n    </div>\n    <div className={styles.columns}>\n      {years.map(year => (\n        <div key={year} className={styles.column}>\n          <div>{year}</div>\n          <div className={styles.value}>{dataStats[year].min}</div>\n          <div className={styles.value}>{dataStats[year].max}</div>\n          <div className={styles.value}>{dataStats[year].median}</div>\n          <div className={styles.value}>{dataStats[year].mean.toFixed(2)}</div>\n          <div className={styles.value}>{dataStats[year].sum}</div>\n        </div>\n      ))}\n    </div>\n  </div>\n)\n\nexport default memo(Stats)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport noop from 'utils/noop';\nimport { years } from \"utils/getData\";\n\nimport { Popup as LeafletPopup } from 'react-leaflet'\nimport { BarChart, Bar, XAxis, LabelList } from 'recharts'\nimport styles from './popup.module.css'\n\nexport default class Popup extends PureComponent {\n  static propTypes = {\n    position: PropTypes.shape({\n      lat: PropTypes.number.isRequired,\n      lng: PropTypes.number.isRequired\n    }),\n    feature: PropTypes.object.isRequired,\n    year: PropTypes.number.isRequired,\n    onClose: PropTypes.func\n  }\n\n  static defaultProps = {\n    onClose: noop\n  }\n\n  formatD3Data = data => years.map(year => ({ name: year, value: data[year] }) )\n  \n  render() {\n    const { position, feature, year, onClose } = this.props\n    const count = feature.properties[year]\n\n    return (\n      <LeafletPopup position={position} onClose={onClose}>      \n        <h4 className={styles.title}>\n          <div>{feature.properties.name}</div>\n          {count ? count : 'none'} in {year}\n        </h4>\n        <BarChart width={200} height={200} data={this.formatD3Data(feature.properties)}>\n          <Bar dataKey='value' fill='#0099CC'>\n            <LabelList dataKey=\"value\" position=\"insideTop\" />\n          </Bar>\n          <XAxis dataKey=\"name\" />\n        </BarChart>          \n      </LeafletPopup>\n    )\n  }\n}\n","/**\n * Noop function. Often serves as a default property value.\n * @return {undefined} Undefined\n */\n\nexport default function noop() {}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Map, TileLayer, GeoJSON } from 'react-leaflet'\nimport { scaleLinear } from 'd3'\n\nimport { data, dataStats, dataCenter } from 'utils/getData'\nimport Popup from './Popup'\nimport styles from './index.module.css'\n\nexport default class Choropleth extends PureComponent {\n  static propTypes = {\n    year: PropTypes.number.isRequired,\n    className: PropTypes.string\n  }\n\n  static defaultProps = {\n    className: ''\n  }\n\n  state = {\n    popupPos: null,\n    popupFeature: null\n  }\n\n  initialZoom = 13\n  maxFillOpacity = 0.7\n\n  fillScale = year => scaleLinear().domain([dataStats[year].mean, dataStats[year].max]).range([0.2, this.maxFillOpacity])\n\n  getFillOpacity = (properties, year) => this.fillScale(year)(properties[year])\n\n  styleFeature = feature => {\n    const { year } = this.props\n    const { properties } = feature\n\n    return {\n      color: '#999491',\n      weight: 1,\n      fillColor: '#CC6161',\n      fillOpacity: this.getFillOpacity(properties, year)\n    }\n  }\n\n  setPopup = event => {\n    this.setState({\n      popupPos: event ? event.latlng : null,\n      popupFeature: event ? event.target.feature : null\n    })\n  }\n\n  onEachFeature = (feature, layer) => {\n    layer.on('click', this.setPopup, this)\n  }\n\n  render() {\n    const { className, year } = this.props\n    const { popupPos, popupFeature } = this.state\n\n    return (\n      <Map className={className} center={dataCenter} zoom={this.initialZoom}>\n        <TileLayer\n          className={styles.chloropleth}\n          attribution=\"&amp;copy <a href=&quot;https://wikimediafoundation.org/wiki/Maps_Terms_of_Use&quot;>Wikimedia</a>\"\n          url=\"https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png\"\n        />\n        <GeoJSON key={year} data={data} style={this.styleFeature} onEachFeature={this.onEachFeature} />\n        {popupPos && <Popup position={popupPos} feature={popupFeature} year={year} onClose={this.setPopup} />}\n      </Map>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport Leaflet from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nimport { MdList } from \"react-icons/md\";\nimport Header from \"components/Header\";\nimport Stats from \"components/Stats\";\nimport Choropleth from \"components/Choropleth\";\nimport styles from \"./index.module.css\";\n\nLeaflet.Icon.Default.imagePath = \"resources/images/\";\n\nclass App extends Component {\n  state = {\n    year: 2010,\n    showStats: false\n  };\n\n  onYearChange = year => {\n    this.setState({\n      year\n    });\n  };\n\n  showStats = () =>\n    this.setState(prevState => ({ showStats: !prevState.showStats }));\n\n  render() {\n    const { year, showStats } = this.state;\n\n    return (\n      <div className={styles.App}>\n        <Header year={year} onYearChange={this.onYearChange}>\n          <MdList onClick={this.showStats} />\n        </Header>\n\n        {showStats && <Stats />}\n        \n        <Choropleth className={styles.mapContainer} year={year} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from 'serviceWorker';\n\nimport App from 'components/App';\nimport 'index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"\\\"resources/css/colors.module.css\\\"\",\"black\":\"#131416\",\"grey\":\"#999491\",\"container\":\"Stats_container__1RK6c\",\"columns\":\"Stats_columns__pbPem\",\"column\":\"Stats_column__1l5YC\",\"value\":\"Stats_value__2w5EA\",\"spaceAbove\":\"Stats_spaceAbove__xnwaB\",\"rowHeadings\":\"Stats_rowHeadings__1YAug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"\\\"resources/css/colors.module.css\\\"\",\"black\":\"#131416\",\"blue\":\"#29324D\",\"header\":\"Header_header__37Fdu\",\"headerLeft\":\"Header_headerLeft__2_3jA\",\"title\":\"Header_title__3Kn8m\",\"icons\":\"Header_icons__25FwE\"};"],"sourceRoot":""}